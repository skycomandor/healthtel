buildscript {
    ext {
        kotlinVersion = '1.2.41'
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        
    }
}


apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'kotlin-jpa'

group = 'com.health'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8



compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

task buildUi {
    doLast {
        exec {
            workingDir 'src/main/ui'
            commandLine 'ng', 'build'
        }
    }
}

task installNpm {
    doLast {
        exec {
            workingDir 'src/main/ui'
            commandLine 'npm', 'i'
        }
    }
}

jar {
    baseName = 'health-service'
    version = '0.1.0'
	  manifest {
		  attributes 'Main-Class' : 'com.health.healthtel.HealthtelApplication'
	  }
}


task copyUi(type: Copy) {
    from 'src/main/ui/dist/clinic/'
    into 'src/main/resources/static/'
}

task dropUi(type: Delete) {
    def dirName = 'src/main/resources/static/'
    file(dirName).list().each {
        f ->
            delete "${dirName}/${f}"
    }
}








dependencies {
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile "org.flywaydb:flyway-core:5.2.4"
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-jersey')
//	compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
//	testCompile('org.springframework.security:spring-security-test')
}
